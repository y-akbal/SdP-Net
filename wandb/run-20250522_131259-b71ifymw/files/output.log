[GPU0] Epoch 1

0 Batch passed the average loss is 6.932036399841309, lr is [1.5e-06] -- 0.81699267578125secs to pass a batch!
10 Batch passed the average loss is 6.954274654388428, lr is [1.5e-06] -- 0.11701993560791016secs to pass a batch!
20 Batch passed the average loss is 6.929848670959473, lr is [1.5e-06] -- 0.11686486053466796secs to pass a batch!
30 Batch passed the average loss is 6.932894706726074, lr is [1.5e-06] -- 0.11684652709960938secs to pass a batch!
40 Batch passed the average loss is 6.904283046722412, lr is [1.5e-06] -- 0.11690819549560547secs to pass a batch!
50 Batch passed the average loss is 6.893912315368652, lr is [1.5e-06] -- 0.11713069152832031secs to pass a batch!
60 Batch passed the average loss is 6.932741165161133, lr is [1.5e-06] -- 0.11712553405761719secs to pass a batch!
70 Batch passed the average loss is 6.916866779327393, lr is [1.5e-06] -- 0.11700287628173828secs to pass a batch!
80 Batch passed the average loss is 6.9172210693359375, lr is [1.5e-06] -- 0.11705990600585937secs to pass a batch!
Traceback (most recent call last):
  File "/home/sahmaran/Desktop/Repos/SdP-Net/model_train.py", line 101, in <module>
    main()
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           ^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            ^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
          ^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
                       ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/Desktop/Repos/SdP-Net/model_train.py", line 96, in main
    trainer.train()
  File "/home/sahmaran/Desktop/Repos/SdP-Net/training_tools.py", line 146, in train
    self._run_epoch()
  File "/home/sahmaran/Desktop/Repos/SdP-Net/training_tools.py", line 113, in _run_epoch
    batch_loss = self._run_batch(source, targets, batch_enum = i)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/Desktop/Repos/SdP-Net/training_tools.py", line 86, in _run_batch
    output = self.model(source)
             ^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/parallel/distributed.py", line 1643, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/parallel/distributed.py", line 1459, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/Desktop/Repos/SdP-Net/model.py", line 140, in forward
    x_raw_output, registers = block(x_raw_output, registers)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/Desktop/Repos/SdP-Net/layers.py", line 382, in forward
    x, register = self.t_block(x, register, mask)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sahmaran/Desktop/Repos/SdP-Net/layers.py", line 275, in forward
    x_flat_register = torch.concat([register, x_flat], axis = 1)  ###(B, R+H*W, C)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/sahmaran/Desktop/Repos/SdP-Net/model_train.py", line 101, in <module>
[rank0]:     main()
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/main.py", line 94, in decorated_main
[rank0]:     _run_hydra(
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
[rank0]:     _run_app(
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/_internal/utils.py", line 457, in _run_app
[rank0]:     run_and_report(
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
[rank0]:     return func()
[rank0]:            ^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
[rank0]:     lambda: hydra.run(
[rank0]:             ^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/_internal/hydra.py", line 119, in run
[rank0]:     ret = run_job(
[rank0]:           ^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/hydra/core/utils.py", line 186, in run_job
[rank0]:     ret.return_value = task_function(task_cfg)
[rank0]:                        ^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/Desktop/Repos/SdP-Net/model_train.py", line 96, in main
[rank0]:     trainer.train()
[rank0]:   File "/home/sahmaran/Desktop/Repos/SdP-Net/training_tools.py", line 146, in train
[rank0]:     self._run_epoch()
[rank0]:   File "/home/sahmaran/Desktop/Repos/SdP-Net/training_tools.py", line 113, in _run_epoch
[rank0]:     batch_loss = self._run_batch(source, targets, batch_enum = i)
[rank0]:                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/Desktop/Repos/SdP-Net/training_tools.py", line 86, in _run_batch
[rank0]:     output = self.model(source)
[rank0]:              ^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/parallel/distributed.py", line 1643, in forward
[rank0]:     else self._run_ddp_forward(*inputs, **kwargs)
[rank0]:          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/parallel/distributed.py", line 1459, in _run_ddp_forward
[rank0]:     return self.module(*inputs, **kwargs)  # type: ignore[index]
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/Desktop/Repos/SdP-Net/model.py", line 140, in forward
[rank0]:     x_raw_output, registers = block(x_raw_output, registers)
[rank0]:                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/Desktop/Repos/SdP-Net/layers.py", line 382, in forward
[rank0]:     x, register = self.t_block(x, register, mask)
[rank0]:                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/miniconda3/envs/torch/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/home/sahmaran/Desktop/Repos/SdP-Net/layers.py", line 275, in forward
[rank0]:     x_flat_register = torch.concat([register, x_flat], axis = 1)  ###(B, R+H*W, C)
[rank0]:                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]: KeyboardInterrupt
